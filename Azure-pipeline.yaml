trigger:
- none
variables:
 # Container registry service connection established during pipeline creation
 dockerRegistryServiceConnection: 'DssAzureContainerRegistry'
 imageRepository: 'smartemployee'
 containerRegistry: 'dssdemoregistry.azurecr.io'
 dockerfilePath: '**/Dockerfile'
 tag: '$(Build.BuildId)'
 imagePullSecret: 'dssregistry-secret'
 # Agent VM image name
 vmImageName: 'ubuntu-latest'
stages:
- stage: Build
 displayName: Build stage
 jobs:
 - job: Build
 displayName: Build
 pool:
 vmImage: $(vmImageName)
 steps:
 - task: Docker@2
 displayName: Build and push an image to container registry
 inputs:
 command: buildAndPush
 repository: $(imageRepository)
 dockerfile: $(dockerfilePath)
 buildContext: '.'
 containerRegistry: $(dockerRegistryServiceConnection)
 tags: |
 $(tag)
 - task: CopyFiles@2
 inputs:
 SourceFolder: 'HelloWorldApp.AKSYamls'
 Contents: '**'
 TargetFolder: '$(Build.ArtifactStagingDirectory)'

 - task: PublishPipelineArtifact@1
 inputs:
 targetPath: '$(Build.ArtifactStagingDirectory)'
 artifact: 'drop'
 publishLocation: 'pipeline'

- stage: Deploy
 displayName: Deploy stage
 dependsOn: Build
 jobs:
 - deployment: Deploy
 displayName: Deploy
 pool:
 vmImage: $(vmImageName)
 environment: 'HelloWorldApp.default'
 strategy:
 runOnce:
  deploy: 
steps:
 - task: KubernetesManifest@0
 displayName: Create imagePullSecret
 inputs:
 action: createSecret
 secretName: $(imagePullSecret)
 dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
 - task: KubernetesManifest@0
 displayName: Deploy to Kubernetes cluster
 inputs:
 action: deploy
 manifests: |
 $(Pipeline.Workspace)/drop/Deployment.yaml
 $(Pipeline.Workspace)/drop/Service.yaml
 imagePullSecrets: |
 $(imagePullSecret)
 containers: |
 $(containerRegistry)/$(imageRepository):$(tag)
